@model WebApp.Helpers.PaginatedList<WebApp.Models.VideoGames.Game>

@{
    ViewData["Title"] = "Lista Gier";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Lista Gier</h1>

<!-- Pasek wyszukiwania -->
<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Search" method="get">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" placeholder="Wpisz wyszukiwany tytuł gry lub wydawcę" value="@ViewData["CurrentFilter"]" />
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search"></i> Szukaj
                </button>
            </div>
        </form>
    </div>
    <div class="col-md-6 text-end">
        <p>Liczba wyników: @(Model?.Count ?? 0)</p>
    </div>
</div>

<form id="pageSizeForm" asp-action="Index" method="get" class="mb-3">
    <div class="form-group">
        <label>Ilość elementów na stronę:</label>
        <div class="btn-group" role="group">
            <button type="button" class="btn @(ViewData["PageSize"] as int? == 20 ? "btn-primary" : "btn-outline-primary")"
                    onclick="updatePageSize(20)">20</button>
            <button type="button" class="btn @(ViewData["PageSize"] as int? == 40 ? "btn-primary" : "btn-outline-primary")"
                    onclick="updatePageSize(40)">40</button>
            <button type="button" class="btn @(ViewData["PageSize"] as int? == 80 ? "btn-primary" : "btn-outline-primary")"
                    onclick="updatePageSize(80)">80</button>
        </div>
    </div>
    <!-- Ukryte pola dla pozostałych parametrów -->
    <input type="hidden" id="pageSizeInput" name="pageSize" value="@(ViewData["PageSize"] ?? 20)" />
    <input type="hidden" id="pageNumberInput" name="pageNumber" value="@(ViewData["PageNumber"] ?? 1)" />
    <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
    <input type="hidden" name="currentFilter" value="@ViewData["CurrentFilter"]" />
    <input type="hidden" name="searchString" value="@ViewData["CurrentFilter"]" />
</form>

<table class="table game-table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().GameName)</th>
        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Genre.GenreName)</th>
        <th>Wydawca</th>
        <th>Akcje</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var game in Model)
    {
        <tr>
            <td>@game.GameName</td>
            <td>@game.Genre.GenreName</td>
            <td>@string.Join(", ", game.GamePublishers.Select(gp => gp.Publisher?.PublisherName))</td>
            <td>
                <a asp-action="Edit" asp-route-id="@game.Id" class="btn btn-secondary">Edit</a>
                <a asp-action="Details" asp-route-id="@game.Id" class="btn btn-primary">Details</a>
                <a asp-action="Delete" asp-route-id="@game.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

<nav aria-label="Page navigation" class="mt-3">
    <ul class="pagination justify-content-center">
        @* Obsługa paginacji *@
        @{
            int? currentPage = ViewData["PageNumber"] as int?;
            int? maxPage = ViewData["MaxPageNumber"] as int?;
            int pageSize = (ViewData["PageSize"] as int?) ?? 20;
        }

        <li class="page-item @(currentPage > 1 ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = currentPage - 1, pageSize = pageSize })">Poprzednia</a>
        </li>

        <li class="page-item @(currentPage > 1 ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1, pageSize = pageSize })">Pierwsza</a>
        </li>

        @for (int i = Math.Max(2, (currentPage ?? 1) - 2); i < (currentPage ?? 1); i++)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = pageSize })">@i</a>
            </li>
        }

        <li class="page-item active">
            <span class="page-link">@currentPage</span>
        </li>

        @for (int i = (currentPage ?? 1) + 1; i <= Math.Min((currentPage ?? 1) + 2, maxPage ?? 1); i++)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = pageSize })">@i</a>
            </li>
        }

        <li class="page-item">
            <a class="page-link" href="#" data-bs-toggle="dropdown">...</a>
            <div class="dropdown-menu p-3">
                <form action="@Url.Action("Index")" method="get">
                    <label for="customPageInput">Idź do strony:</label>
                    <input type="number" id="customPageInput" name="pageNumber" class="form-control mb-2"
                           min="1" max="@maxPage" value="@currentPage" />
                    <input type="hidden" name="pageSize" value="@pageSize" />
                    <button type="submit" class="btn btn-primary w-100">Przejdź</button>
                </form>
            </div>
        </li>

        <li class="page-item @(currentPage == maxPage ? "disabled" : "")">
            <a class="page-link @(currentPage == maxPage ? "" : "active")"
               href="@(currentPage == maxPage ? "#" : Url.Action("Index", new { pageNumber = maxPage, pageSize = pageSize }))">
                Ostatnia
            </a>
        </li>

        <li class="page-item @(currentPage < maxPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { pageNumber = (currentPage ?? 1) + 1, pageSize = pageSize })">Następna</a>
        </li>
    </ul>
</nav>

<script>
    function updatePageSize(newPageSize) {
        const currentPage = @ViewData["PageNumber"] ?? 1;
        const pageSize = @ViewData["PageSize"] ?? 20;

        const firstElementIndex = (currentPage - 1) * pageSize + 1; // Pierwszy element na aktualnej stronie
        const newPageNumber = Math.ceil(firstElementIndex / newPageSize); // Nowy numer strony

        // Ustawienia formularza
        document.getElementById("pageSizeInput").value = newPageSize;
        document.getElementById("pageNumberInput").value = newPageNumber;

        // Przesłanie formularza
        document.getElementById("pageSizeForm").submit();
    }
</script>
